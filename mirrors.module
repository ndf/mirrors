<?php

use Drupal\mirrors\Test;

/**
 * @file
 * Creates an Export View and an Import Feed for your entities
 */

/**
 * Implements hook_ctools_plugin_directory().
 */
function mirrors_ctools_plugin_directory($module, $plugin) {
  if ($module == 'mirrors') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implements hook_ctools_plugin_type().
 */
function mirrors_ctools_plugin_type() {
  $plugins['entity_type'] = array();
  $plugins['field_type'] = array();
  $plugins['property_type'] = array();
  return $plugins;
}

/**
 * Get the list of entity_type plugins.
 */
function mirrors_entity_type_plugins() {
  ctools_include('plugins');
  $plugins = ctools_get_plugins('mirrors', 'entity_type');
  uasort($plugins, 'ctools_plugin_sort');

  return $plugins;
}

/**
 * Get the list of property_type plugins.
 */
function mirrors_property_type_plugins() {
  ctools_include('plugins');
  $plugins = ctools_get_plugins('mirrors', 'property_type');
  uasort($plugins, 'ctools_plugin_sort');

  return $plugins;
}

/**
 * Get the list of field_type plugins.
 */
function mirrors_field_type_plugins() {
  ctools_include('plugins');
  $plugins = ctools_get_plugins('mirrors', 'field_type');
  uasort($plugins, 'ctools_plugin_sort');

  return $plugins;
}


/**
 * Per entity-bundle a feed importer and a views-exporter will be created.
 *
 * Logic:
 * 1. Function that returns fields and properties for supported bundles.
 * 2. Function that creates feed-configurations.
 * 3. Function that creates view-configurations.
 */

/**
 * Default separator is used in multivalue list-fields.
 */
define('MIRRORS_DEFAULT_SEPARATOR', '/');

/**
 * Implements hook_permission().
 */
function mirrors_permission() {
  return array(
    'administer mirrors' => array(
      'title' => t('Administer mirrors'),
      'description' => t('Use mirrors export-views.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function mirrors_menu() {
  $items = array();
  $items['admin/structure/mirrors'] = array(
    'title' => 'Mirrors',
    'description' => 'Manage Mirrors settings for each bundle.',
    'page callback' => 'mirrors_admin_page',
    'access arguments' => array('administer mirrors'),
    'file' => 'mirrors.admin.inc',
  );
  return $items;
}

/**
 * Implements hook_views_api().
 */
function mirrors_views_api() {
  return array('api' => 3);
}

/**
 * Implements hook_ctools_plugin_api().
 */
function mirrors_ctools_plugin_api() {
  list($module, $api) = func_get_args();
  if ($module == 'feeds' && $api == 'feeds_importer_default') {
    return array('version' => 1);
  }
  if ($module == "feeds_tamper" && $api == "feeds_tamper_default") {
    return array("version" => "2");
  }
}

/**
 * Return a
 */